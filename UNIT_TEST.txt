הי אוראל ,
אני כותבת פה את כל הטסטים שקופצים לי לראש ותוסיף\תוריד לפי דעתך

1.מחלקת BOARD :
*לבדוק שממוקמים איקסים ועיגולים במרכז הלוח לאחר היצירה באופ אוטומטי
*לבצע סימולציה של מהלך בודד מתוך קטור של אפשרויות ולוודא שאכן האפשרות היא חלק מהוקטור
*לבצע סימולציה של מהלך שאינו מתוך וקטור האפשרוית ולבדוק קיבלנו שגיאת "הכנס קלט מחדש"
*ליצור מצב עולם (בעזרת לוח קטן) שניתן לחזות בו מראש את המהלכים הבאים האפשריים - ולוודא שכולם באמת חלק מהווקטור אפשרויות.
*לבדוק שוקטור האפשרויות מכיל רק נקודות שהן בגבולות הלוח
*לבדוק שהקופי קונסטרקטור אכן מעתיק את הלוח בצורה זהה -> מצריך כתיבת פונקצית "EQUALS" במחלקת BOARD
*לבדוק את פנקצית SETSQUARE
*בדיקה שהבורד מלא
*בדיקה שרירותית של משבצת שהיא לא בתוך הלוח - ובדיקה שפונקציית isSquareInBoard מתריעה על כך
-- שים לב שכדאי להוסיף למחלקת בורד פונקציית "איתחול" או "ריסוט" כד שנעבוד כל פעם בדימוי של מצבי עולם שלנו , על אותו הלוח ולא נעשה כל פעם ניו ניו ניו"-> יגרום לנו 
לבעיות של הקצאות דינמיות בסוף

2.מחלקת DEFAULT_LOGIC
*ליצור לוח שבו המשחק אמור להיגמר (אין מהלכים לשני השחקנים או לוח מלא ) ולוודא שקיבלנו gameOver->TRUE
*הכי חשוב לדעתי ! - בדיקה של sAvalableMoves לוודא שבאמת ניתנות כל המשבצות האפשריות
*לדמות מצב שבו שחקן עשה מהלך כלשהו בוח שאנחנו מכירים ובחרנו את השיבוצים - ולראות שהמהלך שלו גרם לאכילת האויב כפי שצרך להיות
*לוודא שכאשר מגיע ווקטור מהלכים ריק -> יוצא על כך הודעה לשחקן והתור מועבר לאויב 
*וודא שהפונקציה שבודקת מי מנצח אכן מונה נכון את מספר האיקסים והעיגולים בלוח -> אפשר לבקש ממנה להדפיס את כמות האיקסי והעיגולים
*הכי חשוב ! - הלוגיקה שקשורה לשחקן הממוחשב , לוודא שהוא באמת עושה את כל המלהכים האפשריים הטובים ביותר לאורך כל הדרך,
להתבסס על הקוד שאתה כתבת לשחקן המלאכותי, ולבדוק את זה על לוח קטן שאנחנו ממלאים מראש
*בדיקה אם הפונקצייה באמת בוחרת את המהלך הטוב ביותר במצב ספציפי אחרי שבדרנו ידנית את כל המהלכים

3.מחלקת GAME_FLOW 
*לוודא שיש מעבר תקין של תורות בין השחקנים לסירוגין
*לבדוק שהמשחק תמיד מתחיל בתורו של השחקן X ושמהלך המשחק תקין 
* הפונקציה getMoveAndPlayIt לוודא שהיא מבצעת את המהלך הספציפי שהיא אמורה לבצע ולא משנה דברים אחרים בלוח מלבד המשבצות שהיא אמורה לאכול



4.מחלקת SQUARE
*ליצור 2 משבצות שונות ולהשוות ביניהן 
*ליצור 2 משבצות זהות ולהשוות ביניהן
*לוודא שהפונק' isSquareInVector אכן עובדת ע"י דוגמאות שרירותיות 
*בדיקה שפונקצית setType אכן עושה את עבודתה. משתמשים בה הרבה 

שאר המחלקות - מחלקת שחקן או שחקן מחשב : אין בהן הרבה לוגיקה או פונקציות , אני לא רואה טעם לבדוק אותן
מחלקת ההדפסה - צריך להשוות סטרינגים בין מה שמודפס לבין מה שביקשו להדפיס ? נראלה לי מיותר .
אולי אפשר לבדוק הדפסה של משבצת , או הדפסה של וקטור (שאחרי הנקודה האחרונה אין פסיק ) - להשאיר לסוף זה לא קריטי
אמורים לבדוק פונקציות די-קונסטרקטור?

אוראל - לא לשכוח לעשות VALGRID בסוף - תזכיר לי לבדוק את זה לפני שאנחנו מגישים


